/************************************************************************************************************************************************************************

A sequence of processes is represented as a tree structure. 
Each process is numbered sequentially starting from 1. 
The process number n pawns n new child processes. 

For example, process 1 pawns 1 child process, 
             process 2 pawns 2 child process, 
             process 3 pawns 3 child process. 

Given a specific process number, determine the process number of its parent. 
Process number equal to 6, so the parent of 6 is 3.

Tree Structure Pattern ::

Process 1 spawns 1 child → 2
Process 2 spawns 2 children → 3, 4
Process 3 spawns 3 children → 5, 6, 7
Process 4 spawns 4 children → 8, 9, 10, 11
Process 5 spawns 5 children → 12, 13, 14, 15, 16

*************************************************************************************************************************************************************************/
import java.util.*;
public class Main
{
    public static int findParentBasedOnChild(int processNumber){
        
        //No parent for 1 
        if(processNumber == 1) return 0;
        
        //parent =1 ; child =2
        int parent = 1, child = 2;
        while(true){
            for(int i=0;i<parent;i++){
                if(child==processNumber){
                    return parent;
                }
                child ++;
            }
            parent++;
        }
    }
    
	public static void main(String[] args) {
		int processNumber = 6;
		System.out.println(findParentBasedOnChild(processNumber));
	}
}
